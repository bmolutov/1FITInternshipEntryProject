openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /api/companies/:
    get:
      operationId: api_companies_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/companies/{id}/:
    get:
      operationId: api_companies_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/companies/filtered/{type}/:
    get:
      operationId: api_companies_filtered_retrieve
      parameters:
      - in: path
        name: type
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/companies/sorted/:
    get:
      operationId: api_companies_sorted_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/login/:
    post:
      operationId: api_login_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/logout/:
    get:
      operationId: api_logout_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/register/:
    post:
      operationId: api_register_create
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/review/:
    post:
      operationId: api_review_create
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/review/companies/{company_id}/:
    get:
      operationId: api_review_companies_retrieve
      parameters:
      - in: path
        name: company_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/review/companies/{company_id}/{rating}/:
    get:
      operationId: api_review_companies_retrieve_2
      parameters:
      - in: path
        name: company_id
        schema:
          type: integer
        required: true
      - in: path
        name: rating
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/review/edit/{id}/:
    put:
      operationId: api_review_edit_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/user/:
    get:
      operationId: api_user_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
